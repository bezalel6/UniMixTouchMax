#!/usr/bin/env python3
"""
Build information script for PlatformIO
Generates include/BuildInfoGenerated.h with git and build information
"""

import subprocess
import os
from datetime import datetime

BUILD_INFO_GENERATED_PATH = os.path.join(
    os.path.dirname(__file__), "../include/BuildInfoGenerated.h"
)


def get_git_commit_hash():
    try:
        result = subprocess.run(
            ["git", "rev-parse", "--short", "HEAD"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True,
            timeout=5,
        )
        if result.returncode == 0:
            return result.stdout.strip()
    except:
        pass
    return "dev"


def get_git_branch():
    try:
        result = subprocess.run(
            ["git", "rev-parse", "--abbrev-ref", "HEAD"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True,
            timeout=5,
        )
        if result.returncode == 0:
            branch = result.stdout.strip()
            return "detached" if branch == "HEAD" else branch
    except:
        pass
    return "unknown"


def main():
    commit_hash = get_git_commit_hash()
    branch = get_git_branch()
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")

    # Generate the complete header file content
    header_content = f"""#pragma once

/*
 * AUTO-GENERATED BUILD INFORMATION
 * This file is automatically generated by scripts/get_build_info.py
 * Do not edit manually - changes will be overwritten
 */

// =============================================================================
// GIT INFORMATION
// =============================================================================

#define FIRMWARE_BUILD_NUMBER "{commit_hash}"
#define GIT_BRANCH "{branch}"
#define BUILD_TIMESTAMP_NUM "{timestamp}"

// =============================================================================
// CONVENIENCE FUNCTIONS
// =============================================================================

#ifdef __cplusplus
extern "C" {{
#endif

/**
 * @brief Get git commit hash
 * @return const char* git commit hash
 */
static const char* getGitCommitHash() {{
    return FIRMWARE_BUILD_NUMBER;
}}

/**
 * @brief Get git branch name
 * @return const char* git branch name
 */
static const char* getGitBranch() {{
    return GIT_BRANCH;
}}

/**
 * @brief Get build timestamp (YYYYMMDD_HHMMSS format)
 * @return const char* build timestamp
 */
static const char* getBuildTimestampNum() {{
    return BUILD_TIMESTAMP_NUM;
}}

#ifdef __cplusplus
}}
#endif
"""

    # Ensure the include directory exists
    os.makedirs(os.path.dirname(BUILD_INFO_GENERATED_PATH), exist_ok=True)

    # Write the generated header file
    with open(BUILD_INFO_GENERATED_PATH, "w", encoding="utf-8") as f:
        f.write(header_content)

    print(f"Generated build info: {BUILD_INFO_GENERATED_PATH}")
    print(f"  Commit: {commit_hash}")
    print(f"  Branch: {branch}")
    print(f"  Timestamp: {timestamp}")


if __name__ == "__main__":
    main()
